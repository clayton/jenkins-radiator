{
  "name": "gulp-coffee",
  "description": "Compile CoffeeScript files",
  "version": "1.4.2",
  "homepage": "http://github.com/wearefractal/gulp-coffee",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/gulp-coffee.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin"
  ],
  "dependencies": {
    "event-stream": "^3.0.20",
    "coffee-script": "~1.7.0",
    "gulp-util": "^2.2.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/gulp-coffee/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/gulp-coffee.png?branch=master)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>gulp-coffee</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Compiles CoffeeScript</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n</table>\n\n## Usage\n\n```javascript\nvar coffee = require('gulp-coffee');\n\ngulp.task('coffee', function() {\n  gulp.src('./src/*.coffee')\n    .pipe(coffee({bare: true}).on('error', gutil.log))\n    .pipe(gulp.dest('./public/'))\n});\n```\n\n### Error handling\n\ngulp-coffee will emit an error for cases such as invalid coffeescript syntax. If uncaught, the error will crash gulp.\n\nYou will need to attach a listener (i.e. `.on('error')`) for the error event emitted by gulp-coffee:\n\n```javascript\nvar coffeeStream = coffee({bare: true});\n\n// Attach listener\ncoffeeStream.on('error', function(err) {});\n```\n\nIn addition, you may utilize [gulp-util](https://github.com/wearefractal/gulp-util)'s logging function:\n\n```javascript\nvar gutil = require('gulp-util');\n\n// ...\n\nvar coffeeStream = coffee({bare: true});\n\n// Attach listener\ncoffeeStream.on('error', gutil.log);\n\n```\n\nSince `.on(...)` returns `this`, you can make you can compact it as inline code:\n\n```javascript\n\ngulp.src('./src/*.coffee')\n  .pipe(coffee({bare: true}).on('error', gutil.log))\n  // ...\n```\n\n## Options\n\nThe options object supports the same options as the standard CoffeeScript compiler \n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2013 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wearefractal/gulp-coffee/issues"
  },
  "_id": "gulp-coffee@1.4.2",
  "dist": {
    "shasum": "526bad6cd5feb228e9b6cb45dba81659d28e8896"
  },
  "_from": "gulp-coffee@^1.4.2",
  "_resolved": "https://registry.npmjs.org/gulp-coffee/-/gulp-coffee-1.4.2.tgz"
}
