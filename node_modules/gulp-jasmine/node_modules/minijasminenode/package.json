{
  "name": "minijasminenode",
  "version": "0.2.7",
  "description": "Super simple wrapper around Jasmine for Node",
  "homepage": "https://github.com/juliemr/minijasminenode",
  "repository": {
    "type": "git",
    "url": "https://github.com/juliemr/minijasminenode.git"
  },
  "keywords": [
    "testing",
    "bdd"
  ],
  "author": {
    "name": "Julie Ralph",
    "email": "ju.ralph@gmail.com"
  },
  "licenses": [
    "MIT"
  ],
  "dependencies": {},
  "main": "lib/index.js",
  "bin": {
    "minijasminenode": "bin/minijn"
  },
  "scripts": {
    "test": "node lib/cli.js spec/*_spec.js"
  },
  "devDependencies": {},
  "readme": "minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      onComplete: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/juliemr/minijasminenode/issues"
  },
  "_id": "minijasminenode@0.2.7",
  "dist": {
    "shasum": "f9450a3ed3fd2515c05b44b566b5d186e7bacbec"
  },
  "_from": "minijasminenode@~0.2.7",
  "_resolved": "https://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.7.tgz"
}
